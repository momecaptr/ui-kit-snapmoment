import{j as r}from"./jsx-runtime-CexXSJP5.js";import{r as s}from"./index-BP8_t0zE.js";import{M as L,a as M,b as B,c as P,d as V}from"./ZoomIcon-CB-ZU4IE.js";import"./CheckboxIcon-DCVo8lft.js";import{T as A}from"./Typography-DP5BuXmm.js";import{B as x}from"./Button-CKwiT7Ik.js";import{c as o}from"./clsx-B-dksMZM.js";const F="_boxInput_u0m1w_1",q="_placeholder_u0m1w_35",$="_boxImg_u0m1w_39",H="_active_u0m1w_44",R="_hover_u0m1w_50",O="_errorSeach_u0m1w_56",z="_errorTextAndPassword_u0m1w_66",D="_errorText_u0m1w_66",G="_search_u0m1w_79",J="_close_u0m1w_84",K="_Eye_u0m1w_89",Q="_Close_u0m1w_90",U="_Location_u0m1w_91",W="_Search_u0m1w_110",X="_searchClose_u0m1w_120",Y="_label_u0m1w_128",e={boxInput:F,placeholder:q,boxImg:$,active:H,hover:R,errorSeach:O,errorTextAndPassword:z,errorText:D,search:G,close:J,Eye:K,Close:Q,Location:U,Search:W,searchClose:X,label:Y},_=s.forwardRef((a,w)=>{const{callback:h,className:b,currentValue:g,error:n,id:i,label:I,placeholder:f,type:t,...y}=a,u=i||s.useId(),[m,v]=s.useState(!1),[c,p]=s.useState(g||"");function T(d){a.onChange?.(d),p(d.target.value)}const C=()=>{p(""),h&&h("")},j=()=>{document.getElementById(i??u)?.focus()},N=()=>{console.log("Location icon clicked")};s.useEffect(()=>{a.currentValue===""&&p("")},[a.currentValue]);const S=()=>{v(!m)},E=m?P:V;let l="";switch(t){case"search":l=n?o(e.boxInput,e.errorSearch):o(e.boxInput,e.boxPadding);break;case"email":case"password":case"text":l=n?o(e.boxInputForText,e.boxInput,e.errorTextAndPassword):o(e.boxInputForText,e.boxInput,c.length===0&&e.placeholder);break;default:l=e.boxInput}const k=m?"text":"password";return r.jsxs("div",{className:o(e.box,b),children:[r.jsx(A,{as:"label",className:e.label,htmlFor:i??u,variant:"regular_text_14",children:t!=="search"&&I}),r.jsxs("div",{className:e.searchClose,children:[t==="search"&&r.jsx("div",{children:r.jsx(L,{className:e.Search,onClick:j,viewBox:"0 0 24 24"})}),r.jsx("input",{...y,className:l,id:u,onChange:T,placeholder:f,ref:w,type:t==="password"?k:t,value:c}),t==="password"&&c.length>0&&r.jsx(x,{className:e.Eye,onClick:S,type:"button",variant:"text",children:r.jsx(E,{viewBox:"0 0 24 24"})}),t==="search"&&c.length>0&&r.jsx(x,{className:e.Close,onClick:C,children:r.jsx(M,{viewBox:"0 0 24 24"})}),t==="location"&&r.jsx(x,{className:e.Location,onClick:N,type:"button",variant:"text",children:r.jsx(B,{viewBox:"0 0 24 24"})})]}),n&&r.jsx("div",{className:e.errorText,children:n})]})});_.displayName="Input";_.__docgenInfo={description:`Компонент \`Input\` — настраиваемое поле ввода, поддерживающее различные типы ввода\r
и функционал, включая отображение ошибок, очистку поля и обработку кликов по иконкам.\r
\r
@param {function} callback - Функция обратного вызова, вызываемая при изменении значения поля ввода.\r
@param {string} currentValue - Текущее значение поля ввода (по умолчанию пустая строка).\r
@param {string | undefined} error - Сообщение об ошибке, которое отображается под полем ввода (если есть).\r
@param {string} label - Метка, отображаемая над полем ввода.\r
@param {React.InputHTMLAttributes<HTMLInputElement>} restProps - Остальные атрибуты для элемента <input>,\r
которые могут быть переданы, включая \`type\`, \`placeholder\` и т.д.`,methods:[],displayName:"Input",props:{callback:{required:!1,tsType:{name:"signature",type:"function",raw:"(text: string) => void",signature:{arguments:[{type:{name:"string"},name:"text"}],return:{name:"void"}}},description:""},currentValue:{required:!1,tsType:{name:"string"},description:""},error:{required:!1,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},label:{required:!1,tsType:{name:"string"},description:""}}};export{_ as I};
